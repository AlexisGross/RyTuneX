<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>RyTuneX</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>RyTuneX</value>
  </data>
  <data name="Shell_Home.Content" xml:space="preserve">
    <value>Qu'est-ce que RyTuneX?</value>
  </data>
  <data name="Debloat_NoSelection.Text" xml:space="preserve">
    <value>Sélectionnez un élément de la liste</value>
  </data>
  <data name="Shell_Debloat.Content" xml:space="preserve">
    <value>Alléger</value>
  </data>
  <data name="Shell_SystemInfo.Content" xml:space="preserve">
    <value>Informations système</value>
  </data>
  <data name="Shell_ReportBug.Content" xml:space="preserve">
    <value>Signaler un bogue</value>
  </data>
  <data name="Shell_OptimizeSystem.Content" xml:space="preserve">
    <value>Optimiser le système</value>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personnalisation</value>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Thème</value>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Sombre</value>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Par défaut</value>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>À propos de cette application</value>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>RyTuneX, un optimiseur pour Windows 10 et 11 créé par Rayen Ghanmi, est conçu pour améliorer les performances et l'efficacité du système en supprimant sélectivement les logiciels choisis et en désactivant les services inutiles.</value>
  </data>
  <data name="SettingsPage_PrivacyTermsLink.Content" xml:space="preserve">
    <value>Déclaration de confidentialité</value>
  </data>
  <data name="SettingsPage_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://rayen.vercel.app/rytunex/privacy.html</value>
  </data>
  <data name="WelcomeNotification" xml:space="preserve">
    <value>&lt;toast launch="action=ToastClick"&gt;
  &lt;visual&gt;
    &lt;binding template="ToastGeneric"&gt;
      &lt;text&gt;Bienvenue dans RyTuneX&lt;/text&gt;
      &lt;text&gt;Votre optimiseur parfait pour accélérer votre système&lt;/text&gt;
      &lt;image placement="appLogoOverride" src="{0}Assets/WindowIcon.ico"/&gt;
    &lt;/binding&gt;
  &lt;/visual&gt;
  &lt;actions&gt;
    &lt;action content="Learn More" arguments="action=Settings"/&gt;
  &lt;/actions&gt;
&lt;/toast&gt;</value>
  </data>
  <data name="Settings_Language.Text" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="WelcomeNotice" xml:space="preserve">
    <value>Cher utilisateur précieux,\n\nNous sommes ravis de vous accueillir dans RyTuneX, où l'optimisation des performances rencontre la précision. Développé par Rayen Ghanmi et fièrement conçu par RyByte, RyTuneX n'est pas simplement une application ; c'est votre porte d'entrée vers une expérience informatique améliorée. Que vous utilisiez Windows 11 ou Windows 10, RyTuneX est conçu pour élever les performances de votre appareil à de nouveaux sommets. Plongez dans un univers où les services inutiles sont réduits au silence, les éléments superflus sont éliminés, et le cœur même de votre système est finement réglé grâce à des optimisations intelligentes de la base de registre. Préparez-vous à libérer la véritable puissance de votre appareil - bienvenue dans RyTuneX, où chaque clic est un pas vers un parcours informatique plus rapide et réactif.\n\nRemarque : Veuillez noter que RyTuneX est actuellement en version bêta. Bien que nous soyons ravis de vous avoir parmi nous, certaines fonctionnalités sont en cours de développement, et des problèmes occasionnels peuvent survenir. Vos commentaires sont précieux pour nous aider à affiner et à perfectionner l'expérience RyTuneX. Merci de faire partie de notre parcours visant à optimiser et améliorer votre expérience Windows.\n\nCordialement,\n\nL'équipe RyByte</value>
  </data>
  <data name="WelcomeNoticeTitle" xml:space="preserve">
    <value>Bienvenue dans RyTuneX - Libérez tout le potentiel de votre appareil !</value>
  </data>
</root>